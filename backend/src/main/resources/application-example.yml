spring:
  profiles:
    active: test
  application:
    name: fcfs
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: test
            client-secret: test
            scope:
              - email
              - profile
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - name
              - email
            client-name: Naver
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - profile_nickname
              - profile_image
              - account_email
            client-name: Kakao
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
  datasource:
    url: jdbc:postgresql://localhost:5432/fcfs
    username: test
    password: test
    driver-class-name: org.postgresql.Driver

    hikari:
      maximum-pool-size: 50        # 증가 (기본: 10)
      minimum-idle: 20             # 증가 (기본: 10)
      connection-timeout: 3000     # 3초
      idle-timeout: 300000         # 5분
      max-lifetime: 900000         # 15분
      leak-detection-threshold: 60000  # 연결 누수 감지
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
  data:
    redis:
      host: localhost
      port: 6379
      password: test
      timeout: 1000
      cluster:
        lettuce:
          pool:
            max-active: 32
            max-idle: 16
            min-idle: 0
            max-wait: -1ms
        enabled: true  # Set to true to enable Redis Cluster
        nodes:
          - localhost:9001
          - localhost:9002
          - localhost:9003
          - localhost:9004
          - localhost:9005
          - localhost:9006
        max-redirects: 3
  threads:
    virtual:
      enabled: true
  mail:
    host: smtp.gmail.com
    port: 587
    username: your-email@gmail.com
    password: your-app-password
    properties:
      mail.smtp.auth: true
      mail.smtp.starttls.enable: true
  cloud:
    aws:
      credentials:
        access-key: YOUR_AWS_ACCESS_KEY
        secret-key: YOUR_AWS_SECRET_KEY
      region:
        static: ap-northeast-2
      stack:
        auto: false
  flyway:
    baseline-on-migrate: false

jwt:
  secret: test

storage:
  location: "utest"
  s3:
    bucket-name: your-s3-bucket-name


logging:
  level:
    org.hibernate.SQL: off
    org.hibernate.type.descriptor.sql: off