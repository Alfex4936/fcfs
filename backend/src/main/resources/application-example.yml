server:
  tomcat:
    threads:
      max: 400          # raise worker thread cap (default 200)
      min-spare: 100    # keep enough idle threads for burst traffic
    accept-count: 200   # backlog when all threads are busy
    max-connections: 10000   # OS-level connection cap
    connection-timeout: 5s   # parse-friendly ISO-8601 duration
    keep-alive-timeout: 30s
    max-keep-alive-requests: 200

spring:
  application:
    name: fcfs
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: test
            client-secret: test
            scope:
              - email
              - profile
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - name
              - email
            client-name: Naver
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            client-authentication-method: client_secret_post
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
            scope:
              - profile_nickname
              - profile_image
              - account_email
            client-name: Kakao
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id
  datasource:
    url: jdbc:postgresql://localhost:5432/test
    username: postgres
    password: test
    driver-class-name: org.postgresql.Driver

    hikari:
      maximum-pool-size: 100        # 증가 (기본: 10)
      minimum-idle: 50             # 증가 (기본: 10)
      connection-timeout: 5000     #
      idle-timeout: 300000         # 5분
      max-lifetime: 900000         # 15분
      leak-detection-threshold: 30000  # 연결 누수 감지

  jpa:
    hibernate:
      ddl-auto: validate
    open-in-view: false       # OSIV off for transactional safety
    properties:
      hibernate:
        order_inserts: true
        order_updates: true
        jdbc:
          batch_size: 50
          batch_versioned_data: true

  data:
    redis:
      client-type: lettuce
      password: test
      timeout: 1s
      cluster:
        enabled: true # custom setting
        nodes:
          - localhost:9001
          - localhost:9002
          - localhost:9003
          - localhost:9004
          - localhost:9005
          - localhost:9006
        max-redirects: 3
      lettuce:
        pool:
          enabled: true
          max-active: 200
          max-idle: 100
          min-idle: 20
          max-wait: 3s

  threads:
    virtual:
      enabled: true
  mail:
    host: smtp.gmail.com
    port: 587
    username: your-email@gmail.com
    password: your-app-password
    properties:
      mail.smtp.auth: true
      mail.smtp.starttls.enable: true
  cloud:
    aws:
      credentials:
        access-key: YOUR_AWS_ACCESS_KEY
        secret-key: YOUR_AWS_SECRET_KEY
      region:
        static: ap-northeast-2
  flyway:
    baseline-on-migrate: false

jwt:
  secret: test

storage:
  location: "upload-dir"
  s3:
    bucket-name: your-s3-bucket-name


logging:
  level:
    org.hibernate.SQL: off
    org.hibernate.type.descriptor.sql: off